class Stack:
    def __init__(self):
        self.stack = []

    def push(self, item):
        self.stack.append(item)

    def pop(self):
        if not self.stack:
            return "Stack Underflow"
        return self.stack.pop()

    def print_stack(self):
        print("Stack content:", self.stack)

class Queue:
    def __init__(self):
        self.queue = []

    def enqueue(self, item):
        self.queue.append(item)

    def dequeue(self):
        if not self.queue:
            return "Queue Underflow"
        return self.queue.pop(0)

    def print_queue(self):
        print("Queue content:", self.queue)

# Test cases
# Case 1: Stack Underflow
stack = Stack()
print(stack.pop())  # Stack Underflow

# Case 2: Intermediate Stack Content
stack.push(1)
stack.push(2)
stack.print_stack()  # Stack content: [1, 2]
stack.pop()
stack.print_stack()  # Stack content: [1]

# Case 3: Queue Underflow
queue = Queue()
print(queue.dequeue())  # Queue Underflow

# Case 4: Intermediate Queue Content
queue.enqueue(1)
queue.enqueue(2)
queue.print_queue()  # Queue content: [1, 2]
queue.dequeue()
queue.print_queue()  # Queue content: [2]
